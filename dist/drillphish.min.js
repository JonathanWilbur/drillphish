!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function o(e,t){try{return parseInt(e)}catch(e){return t}}const r="__DRILLPHISH_ACCOUNT_ID__",i="__DRILLPHISH_USERNAME_FIELD_SELECTOR__",s="__DRILLPHISH_PASSWORD_FIELD_SELECTOR__",l="__DRILLPHISH_FORM_SELECTOR__",a="__DRILLPHISH_WEBHOOK_URI__",c="__DRILLPHISH_REDIRECT_URI__",u=o("__DRILLPHISH_DAYS_BETWEEN_REARMING_PAGE__",1),_=o("__DRILLPHISH_DAYS_OF_VICTIM_ID_PERSISTENCE__",365),d=!1;var I;function D(){document.querySelectorAll("input").forEach(e=>{e.setAttribute("disabled","disabled")})}function f(){document.querySelectorAll("form").forEach(e=>{e.reset()})}function L(e){const t=window.localStorage.getItem(e);if(t)return t;console.debug(`DrillPhish could not find '${e}' stored with window.localStorage.`);const n=window.sessionStorage.getItem(e);if(n)return n;console.debug(`DrillPhish could not find a '${e}' stored with window.sessionStorage.`);const o=function(e){const t=new RegExp(`${e}=([^;]+)`).exec(document.cookie);return t?decodeURIComponent(t[1]):null}(e);return o||(console.debug(`DrillPhish could not find a '${e}' stored with document.cookie.`),null)}function h(e,t,n=1){window.localStorage.setItem(e,t),window.sessionStorage.setItem(e,t),function(e,t,n){const o=new Date;o.setTime(o.getTime()+24*n*60*60*1e3),document.cookie=`${e}=${encodeURIComponent(t)};expires ${o.toUTCString};path=/;`}(e,encodeURIComponent(t),n),console.debug(`Stored '${e}' in persistent storage.`)}function E(e,t){if(t.victimID=H,t.event=e,t.href=window.location.href,t.timestamp=(new Date).toISOString(),t.DRILLPHISH_ACCOUNT_ID=r,t.DRILLPHISH_USERNAME_FIELD_SELECTOR=i,t.DRILLPHISH_PASSWORD_FIELD_SELECTOR=s,t.DRILLPHISH_FORM_SELECTOR=l,t.DRILLPHISH_WEBHOOK_URI=a,t.DRILLPHISH_REDIRECT_URI=c,t.DRILLPHISH_DAYS_BETWEEN_REARMING_PAGE=u,t.DRILLPHISH_DAYS_OF_VICTIM_ID_PERSISTENCE=_,t.DRILLPHISH_TESTING=d,t.browserCodeName=navigator.appCodeName,t.browserName=navigator.appName,t.browserVersion=navigator.appVersion,t.cookiesEnabled=navigator.cookieEnabled,t.browserLanguage=navigator.language,t.platform=navigator.platform,t.userAgent=navigator.userAgent,""===a)return void console.debug(`DrillPhish is not using a webhook. DrillPhish would have reported this event: ${JSON.stringify(t)}.`);const n=new XMLHttpRequest;n.addEventListener("load",()=>{n.status<200||n.status>=300?console.warn(`DrillPhish failed to communicate with the webhook endpoint with HTTP status ${n.status}.`):console.debug(`DrillPhish reported event type ${e}.`)}),n.open("POST",a,!0),n.setRequestHeader("Content-Type","application/json"),n.send(JSON.stringify(t))}function S(){if(console.info("Victim fell for the DrillPhish phishing drill."),h("DRILLPHISH_GOTCHA_TIME",(new Date).toISOString(),u),""!==c)window.location.href=c;else{console.warn("DrillPhish is not configured to redirect. User will stay on current page and see an alert instead.");const e=(()=>""!==a?"You actions have been recorded and sent to a remote endpoint. ":"")();alert(`You have fallen for a phishing drill created by DrillPhish. This is a fake website. ${e}`),E(4,{})}}function R(e){return`__${e}__`}!function(e){e[e.DRILLPHISH_LOAD=0]="DRILLPHISH_LOAD",e[e.WINDOW_LOAD=1]="WINDOW_LOAD",e[e.DATA_ENTERED=2]="DATA_ENTERED",e[e.FORM_SUBMITTED=3]="FORM_SUBMITTED",e[e.ALERT_ACKNOWLEDGED=4]="ALERT_ACKNOWLEDGED"}(I||(I={})),console.debug("DrillPhish found."),console.assert(r!==R("DRILLPHISH_ACCOUNT_ID")),console.assert(i!==R("DRILLPHISH_USERNAME_FIELD_SELECTOR")),console.assert(s!==R("DRILLPHISH_PASSWORD_FIELD_SELECTOR")),console.assert(l!==R("DRILLPHISH_FORM_SELECTOR")),console.assert(a!==R("DRILLPHISH_WEBHOOK_URI")),console.assert(c!==R("DRILLPHISH_REDIRECT_URI"));const p=function(){const e=L("DRILLPHISH_GOTCHA_TIME");return e?function(e){const t=e.split(/\D+/);return new Date(Date.UTC(parseInt(t[0]),parseInt(t[1])-1,parseInt(t[2]),parseInt(t[3]),parseInt(t[4]),parseInt(t[5]),parseInt(t[6])))}(e):null}();if(p&&!d){const e=Math.abs((new Date).getTime()-p.getTime());Math.floor(e/864e5)<u&&(D(),f(),window.location.href=c)}const H=function(){const e=L("DRILLPHISH_VICTIM_ID");return e||Math.random().toString(36).replace("0.","")}();console.assert(""!==H),h("DRILLPHISH_VICTIM_ID",H,_),console.info(`Using DrillPhish Victim ID ${H} and Account ID ${r}.`),E(0,{}),window.onload=(()=>{console.debug("DrillPhish loaded."),E(1,{});const e=""===l?(console.warn("No form selector set for DrillPhish. The form will not be policed for submission."),null):document.querySelector(l);if(e){const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e),t.addEventListener("submit",e=>{e.preventDefault(),E(3,{eventTarget:(()=>e.srcElement?e.srcElement.outerHTML:"")(),selectionTarget:t.outerHTML}),D(),f(),S()}),console.debug("DrillPhish is watching the form element for submission events.")}else""!==l&&console.warn("Failed to find an element watched by DrillPhish. Phishing drill may fail.");const t=""===i?(console.warn("No username selector set for DrillPhish. The username field will not be policed for input."),null):document.querySelector(i),n=""===s?(console.warn("No password selector set for DrillPhish. The password field will not be policed for input."),null):document.querySelector(s);console.assert(!(!e&&!t&&!n),"Selectors given to DrillPhish found no elements to watch. DrillPhish exiting."),[t,n].forEach((e,t)=>{e?(e.addEventListener("input",t=>{E(2,{eventTarget:(()=>t.srcElement?t.srcElement.outerHTML:"")(),selectionTarget:e.outerHTML}),D(),f(),S()}),console.debug("DrillPhish is watching a username or password field for input events.")):(0===t&&""!==i||1===t&&""!==s)&&console.warn("Failed to find an element watched by DrillPhish. Phishing drill may fail.")})})}]);